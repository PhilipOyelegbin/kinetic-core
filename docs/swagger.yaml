basePath: /api/v1
definitions:
  internal_controllers_auth.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  internal_controllers_auth.PasswordReset:
    properties:
      confirm_password:
        type: string
      password:
        type: string
    type: object
  internal_controllers_auth.RegisterUser:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  internal_controllers_user.ChangePassword:
    properties:
      confirm_password:
        type: string
      new_password:
        type: string
      old_password:
        type: string
    required:
    - confirm_password
    - new_password
    - old_password
    type: object
  workout_tracker_internal_model_user.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_verified:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      reset_exp_time:
        type: integer
      reset_token:
        type: string
      updatedAt:
        type: string
      verify_exp_time:
        type: integer
      verify_token:
        type: string
    type: object
info:
  contact:
    email: info@philipoyelegbin.com.ng
    name: Philip Oyelegbin
    url: https://philipoyelegbin.com.ng
  description: This project involves creating a backend system for a workout tracker
    application where users can sign up, log in, create workout plans, and track their
    progress. The system will feature JWT authentication, CRUD operations for workouts,
    and generate reports on past workouts.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Kinetic Core API
  version: "1.0"
paths:
  /forgot-password:
    post:
      consumes:
      - application/json
      description: Send a forgot password email to the user
      parameters:
      - description: User Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Send a forgot password mail
      tags:
      - Auth
  /login:
    post:
      consumes:
      - application/json
      description: Login as a user
      parameters:
      - description: Auth
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_controllers_auth.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers_auth.LoginUser'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login as a user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_controllers_auth.RegisterUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_controllers_auth.RegisterUser'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Auth
  /reset-password:
    post:
      consumes:
      - application/json
      description: Reset a user's password
      parameters:
      - description: Reset Token
        in: query
        name: token
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_controllers_auth.PasswordReset'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reset user password
      tags:
      - Auth
  /send:
    post:
      consumes:
      - application/json
      description: Send a verification email to the user
      parameters:
      - description: User Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Send verification mail
      tags:
      - Auth
  /users/change-password:
    patch:
      consumes:
      - application/json
      description: Change the password of the authenticated user
      parameters:
      - description: Change Password Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_controllers_user.ChangePassword'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Change user password
      tags:
      - User
  /users/me:
    get:
      consumes:
      - application/json
      description: Get the profile information of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workout_tracker_internal_model_user.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user profile
      tags:
      - User
  /verify-email:
    get:
      consumes:
      - application/json
      description: Verify a user's email address
      parameters:
      - description: Verification Token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify user email
      tags:
      - Auth
security:
- BearerAuth: []
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" and then your JWT token to authorize
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
